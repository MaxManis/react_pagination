{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","perPage","allItems","onPageChange","paginationButtons","selectedPage","onThisPage","filter","_","i","className","classNames","disabled","href","onClick","map","button","active","length","item","includes","items","perPageOptions","App","useState","itemsOnPage","setItemsOnPage","setSelectedPage","Math","ceil","setPaginationButtons","firstItemOnPage","lastItemOnPage","id","value","onChange","event","target","option","htmlFor","currentTarget","innerText","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,aAEMC,EAAaJ,EAChBK,QAAO,SAACC,EAAGC,GAAJ,OACNA,GAAMJ,EAAeJ,EAAUA,GAC5BQ,EAAKJ,EAAeJ,KAG3B,OACE,qCACE,qBAAIS,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA2B,IAAjBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAgC,IAAjBR,EACfS,QAASX,EALX,oBAWDC,EAAkBW,KAAI,SAAAC,GACrB,OACE,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAAWX,IAHvB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAASX,EAJX,SAMGa,KAXEA,MAiBX,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUP,IAAiBD,EAAkBc,SAFjD,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAiBD,EAAkBc,OAClDJ,QAASX,EALX,uBAWJ,6BACGD,EAASa,KAAI,SAACI,GACb,OAAOb,EAAWc,SAASD,IACzB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC5EfE,EAAQ3B,EAAW,EAAG,IACzBqB,KAAI,SAAAjB,GAAC,qBAAYA,MAEdwB,EAA2B,CAAC,EAAG,EAAG,GAAI,IAE/BC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOnB,EAAP,KAAqBsB,EAArB,KACA,EAAkDH,mBAChD9B,EAAW,EAAGkC,KAAKC,KAAKR,EAAMH,OAASO,KADzC,mBAAOrB,EAAP,KAA0B0B,EAA1B,KAIMC,EAAkB1B,EAAeoB,EAAcA,EAAc,EAC7DO,EAAiB3B,IAAiBD,EAAkBc,OACtDG,EAAMH,OACNb,EAAeoB,EAgBnB,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SAEI,eAAQL,EAAR,sBACY0B,GADZ,aAEQC,EAFR,eAE6BX,EAAMH,OAFnC,OAMJ,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOT,EACPU,SAAU,SAACC,GACTV,GAAgBU,EAAMC,OAAOH,OAC7BJ,EACEpC,EAAW,EAAGkC,KAAKC,KAAKR,EAAMH,QAAUkB,EAAMC,OAAOH,SAEvDP,EAAgB,IAVpB,SAaGL,EAAeP,KAAI,SAAAuB,GAClB,OACE,wBAAqBJ,MAAOI,EAA5B,SACGA,GADUA,UAQrB,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,QAASwB,EACTvB,SAAUmB,EACVlB,aA3De,SAACiC,GACkB,SAAlCA,EAAMI,cAAcC,WACJ,IAAjBpC,EAEDsB,EAAgBtB,EAAe,GACY,SAAlC+B,EAAMI,cAAcC,WAC5BpC,IAAiBD,EAAkBc,OAEpCS,EAAgBtB,EAAe,GAE/BsB,GAAiBS,EAAMI,cAAcC,YAkDnCrC,kBAAmBA,EACnBC,aAAcA,QCjFtBqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1d5e9c33.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n//\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  perPage: number,\n  allItems: string[],\n  onPageChange: (event: React.MouseEvent<HTMLElement>) => void,\n  paginationButtons: number[],\n  selectedPage: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  perPage,\n  allItems,\n  onPageChange,\n  paginationButtons,\n  selectedPage,\n}) => {\n  const onThisPage = allItems\n    .filter((_, i) => (\n      i >= (selectedPage * perPage - perPage)\n      && i < (selectedPage * perPage)\n    ));\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames('page-item', {\n            disabled: selectedPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={selectedPage === 1}\n            onClick={onPageChange}\n          >\n            «\n          </a>\n        </li>\n\n        {paginationButtons.map(button => {\n          return (\n            <li\n              key={button}\n              className={classNames('page-item', {\n                active: button === selectedPage,\n              })}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${button}`}\n                onClick={onPageChange}\n              >\n                {button}\n              </a>\n            </li>\n          );\n        })}\n\n        <li\n          className={classNames('page-item', {\n            disabled: selectedPage === paginationButtons.length,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={selectedPage === paginationButtons.length}\n            onClick={onPageChange}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {allItems.map((item) => {\n          return onThisPage.includes(item) && (\n            <li key={item} data-cy=\"item\">{item}</li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst perPageOptions: number[] = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [itemsOnPage, setItemsOnPage] = useState(5);\n  const [selectedPage, setSelectedPage] = useState(1);\n  const [paginationButtons, setPaginationButtons] = useState(\n    getNumbers(1, Math.ceil(items.length / itemsOnPage)),\n  );\n\n  const firstItemOnPage = selectedPage * itemsOnPage - itemsOnPage + 1;\n  const lastItemOnPage = selectedPage === paginationButtons.length\n    ? items.length\n    : selectedPage * itemsOnPage;\n\n  const onPageChange = (event: React.MouseEvent<HTMLElement>) => {\n    if (event.currentTarget.innerText === '«'\n    && selectedPage !== 1\n    ) {\n      setSelectedPage(selectedPage - 1);\n    } else if (event.currentTarget.innerText === '»'\n    && selectedPage !== paginationButtons.length\n    ) {\n      setSelectedPage(selectedPage + 1);\n    } else {\n      setSelectedPage(+event.currentTarget.innerText);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {\n          `Page ${selectedPage} `\n          + `(items ${firstItemOnPage}`\n          + ` - ${lastItemOnPage} of ${items.length})`\n        }\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsOnPage}\n            onChange={(event) => {\n              setItemsOnPage(+event.target.value);\n              setPaginationButtons(\n                getNumbers(1, Math.ceil(items.length / +event.target.value)),\n              );\n              setSelectedPage(1);\n            }}\n          >\n            {perPageOptions.map(option => {\n              return (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        perPage={itemsOnPage}\n        allItems={items}\n        onPageChange={onPageChange}\n        paginationButtons={paginationButtons}\n        selectedPage={selectedPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//\n"],"sourceRoot":""}